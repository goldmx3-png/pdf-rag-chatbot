services:
  # MongoDB Service
  mongodb:
    image: mongo:7.0
    container_name: pdf-rag-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${DB_NAME:-pdf_rag_db}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - pdf-rag-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ChromaDB Service
  chromadb:
    image: chromadb/chroma:latest
    container_name: pdf-rag-chromadb
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - ANONYMIZED_TELEMETRY=${CHROMA_ANONYMIZED_TELEMETRY:-TRUE}
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma_db
    volumes:
      - chromadb_data:/chroma/chroma_db
    networks:
      - pdf-rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pdf-rag-backend
    restart: unless-stopped
    ports:
      - "8080:8000"
    environment:
      - MONGO_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/${DB_NAME:-pdf_rag_db}?authSource=admin
      - DB_NAME=${DB_NAME:-pdf_rag_db}
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=docker
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    networks:
      - pdf-rag-network
    depends_on:
      mongodb:
        condition: service_healthy
      chromadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Frontend Service (optional - for development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pdf-rag-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - pdf-rag-network
    depends_on:
      - backend

volumes:
  mongodb_data:
    driver: local
  chromadb_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  pdf-rag-network:
    driver: bridge